package upcal.cd.app;

import android.Manifest;
import android.annotation.SuppressLint;
import android.app.Activity;
import android.content.pm.PackageManager;
import android.os.Build;
import android.os.Bundle;
import android.webkit.WebChromeClient;
import android.webkit.WebSettings;
import android.webkit.WebView;
import android.webkit.GeolocationPermissions;
import android.widget.Toast;

import androidx.annotation.NonNull;
import androidx.core.app.ActivityCompat;
import androidx.core.content.ContextCompat;

public class MainActivity extends Activity {

    private WebView mWebView;
    private boolean isLocationPermissionDenied = false;


    @Override
    @SuppressLint("SetJavaScriptEnabled")
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        mWebView = findViewById(R.id.activity_main_webview);
        WebSettings webSettings = mWebView.getSettings();
        webSettings.setJavaScriptEnabled(true);
        webSettings.setGeolocationEnabled(true);

        // Enable localStorage
        webSettings.setDomStorageEnabled(true);

        // Zoom controls
        webSettings.setDisplayZoomControls(false);
        webSettings.setBuiltInZoomControls(true);

        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.KITKAT) {
            webSettings.setLayoutAlgorithm(WebSettings.LayoutAlgorithm.TEXT_AUTOSIZING);
        }

        // Enable Cache Mode
        webSettings.setAllowFileAccess(true);
        webSettings.setCacheMode(WebSettings.LOAD_CACHE_ONLY);

        mWebView.setWebViewClient(new MyWebViewClient());

        // Use setWebChromeClient for JS alert
        mWebView.setWebChromeClient(new WebChromeClient() {

            // Ref: https://developer.android.com/reference/android/webkit/GeolocationPermissions
            // https://turbomanage.wordpress.com/2012/04/23/how-to-enable-geolocation-in-a-webview-android/
            @Override
            public void onGeolocationPermissionsShowPrompt(String origin, GeolocationPermissions.Callback callback) {
                callback.invoke(origin, true, false);
            }
        });


        // LOCAL RESOURCE
        mWebView.loadUrl("file:///android_asset/upcal_offline.html");
    }

    @Override
    public void onBackPressed() {
        if (mWebView.canGoBack()) {
            mWebView.goBack();
        } else {
            super.onBackPressed();
        }
    }


    // The below code is generated by ChatGPT :)
    private static final int REQUEST_LOCATION_PERMISSION = 1;

    @Override
    protected void onResume() {
        super.onResume();

        // Check if location permission is granted
        if (ContextCompat.checkSelfPermission(this, Manifest.permission.ACCESS_FINE_LOCATION) != PackageManager.PERMISSION_GRANTED) {

            // Request location permission only if isLocationPermissionDenied is not set
            if (!isLocationPermissionDenied) {
                ActivityCompat.requestPermissions(this, new String[]{Manifest.permission.ACCESS_FINE_LOCATION}, REQUEST_LOCATION_PERMISSION);
            }

        } else {
            // Location permission is already granted, enable location
            enableLocation();
        }
    }

    private void enableLocation() {
        // Enable location in WebView
        mWebView.getSettings().setGeolocationEnabled(true);
        mWebView.setWebChromeClient(new WebChromeClient() {
            @Override
            public void onGeolocationPermissionsShowPrompt(String origin, GeolocationPermissions.Callback callback) {
                // Grant permission for WebView to access location
                callback.invoke(origin, true, false);
            }
        });
    }


    @Override
    public void onRequestPermissionsResult(int requestCode, @NonNull String[] permissions, @NonNull int[] grantResults) {
        super.onRequestPermissionsResult(requestCode, permissions, grantResults);
        if (requestCode == REQUEST_LOCATION_PERMISSION) {
            if (grantResults.length > 0 && grantResults[0] == PackageManager.PERMISSION_GRANTED) {
                // Location permission has been granted, enable location
                enableLocation();
                // Reset isLocationPermissionDenied
                isLocationPermissionDenied = false;
            } else {
                // Location permission has been denied, show a message to the user
                Toast.makeText(this, "Location permission is needed to auto filling location.", Toast.LENGTH_LONG).show();
                // Update isLocationPermissionDenied
                isLocationPermissionDenied = true;
            }
        }
    }

}
